window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "inky", "modulename": "inky", "kind": "module", "doc": "<p>Inky e-Ink Display Drivers.</p>\n"}, {"fullname": "inky.auto", "modulename": "inky.auto", "kind": "module", "doc": "<p>Automatic Inky setup from i2c EEPROM.</p>\n"}, {"fullname": "inky.auto.DISPLAY_TYPES", "modulename": "inky.auto", "qualname": "DISPLAY_TYPES", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;what&#x27;, &#x27;phat&#x27;, &#x27;phatssd1608&#x27;, &#x27;impressions&#x27;, &#x27;7colour&#x27;, &#x27;whatssd1683&#x27;, &#x27;impressions73&#x27;]"}, {"fullname": "inky.auto.DISPLAY_COLORS", "modulename": "inky.auto", "qualname": "DISPLAY_COLORS", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;red&#x27;, &#x27;black&#x27;, &#x27;yellow&#x27;]"}, {"fullname": "inky.auto.auto", "modulename": "inky.auto", "qualname": "auto", "kind": "function", "doc": "<p>Auto-detect Inky board from EEPROM and return an Inky class instance.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i2c_bus</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">ask_user</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.eeprom", "modulename": "inky.eeprom", "kind": "module", "doc": "<p>Inky display-type EEPROM tools.</p>\n"}, {"fullname": "inky.eeprom.EEP_ADDRESS", "modulename": "inky.eeprom", "qualname": "EEP_ADDRESS", "kind": "variable", "doc": "<p></p>\n", "default_value": "80"}, {"fullname": "inky.eeprom.EEP_WP", "modulename": "inky.eeprom", "qualname": "EEP_WP", "kind": "variable", "doc": "<p></p>\n", "default_value": "12"}, {"fullname": "inky.eeprom.DISPLAY_VARIANT", "modulename": "inky.eeprom", "qualname": "DISPLAY_VARIANT", "kind": "variable", "doc": "<p></p>\n", "default_value": "[None, &#x27;Red pHAT (High-Temp)&#x27;, &#x27;Yellow wHAT&#x27;, &#x27;Black wHAT&#x27;, &#x27;Black pHAT&#x27;, &#x27;Yellow pHAT&#x27;, &#x27;Red wHAT&#x27;, &#x27;Red wHAT (High-Temp)&#x27;, &#x27;Red wHAT&#x27;, None, &#x27;Black pHAT (SSD1608)&#x27;, &#x27;Red pHAT (SSD1608)&#x27;, &#x27;Yellow pHAT (SSD1608)&#x27;, None, &#x27;7-Colour (UC8159)&#x27;, &#x27;7-Colour 640x400 (UC8159)&#x27;, &#x27;7-Colour 640x400 (UC8159)&#x27;, &#x27;Black wHAT (SSD1683)&#x27;, &#x27;Red wHAT (SSD1683)&#x27;, &#x27;Yellow wHAT (SSD1683)&#x27;, &#x27;7-Colour 800x480 (AC073TC1A)&#x27;]"}, {"fullname": "inky.eeprom.EPDType", "modulename": "inky.eeprom", "qualname": "EPDType", "kind": "class", "doc": "<p>Class to represent EPD EEPROM structure.</p>\n"}, {"fullname": "inky.eeprom.EPDType.__init__", "modulename": "inky.eeprom", "qualname": "EPDType.__init__", "kind": "function", "doc": "<p>Initialise new EEPROM data structure.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">width</span>, </span><span class=\"param\"><span class=\"n\">height</span>, </span><span class=\"param\"><span class=\"n\">color</span>, </span><span class=\"param\"><span class=\"n\">pcb_variant</span>, </span><span class=\"param\"><span class=\"n\">display_variant</span>, </span><span class=\"param\"><span class=\"n\">write_time</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "inky.eeprom.EPDType.valid_colors", "modulename": "inky.eeprom", "qualname": "EPDType.valid_colors", "kind": "variable", "doc": "<p></p>\n", "default_value": "[None, &#x27;black&#x27;, &#x27;red&#x27;, &#x27;yellow&#x27;, None, &#x27;7colour&#x27;]"}, {"fullname": "inky.eeprom.EPDType.width", "modulename": "inky.eeprom", "qualname": "EPDType.width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.eeprom.EPDType.height", "modulename": "inky.eeprom", "qualname": "EPDType.height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.eeprom.EPDType.color", "modulename": "inky.eeprom", "qualname": "EPDType.color", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.eeprom.EPDType.pcb_variant", "modulename": "inky.eeprom", "qualname": "EPDType.pcb_variant", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.eeprom.EPDType.display_variant", "modulename": "inky.eeprom", "qualname": "EPDType.display_variant", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.eeprom.EPDType.eeprom_write_time", "modulename": "inky.eeprom", "qualname": "EPDType.eeprom_write_time", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.eeprom.EPDType.from_bytes", "modulename": "inky.eeprom", "qualname": "EPDType.from_bytes", "kind": "function", "doc": "<p>Initialise new EEPROM data structure from a bytes-like object or list.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">class_object</span>, </span><span class=\"param\"><span class=\"n\">data</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.eeprom.EPDType.update_eeprom_write_time", "modulename": "inky.eeprom", "qualname": "EPDType.update_eeprom_write_time", "kind": "function", "doc": "<p>Update the stored write time.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.eeprom.EPDType.encode", "modulename": "inky.eeprom", "qualname": "EPDType.encode", "kind": "function", "doc": "<p>Return a bytearray representing the EEPROM data structure.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.eeprom.EPDType.to_list", "modulename": "inky.eeprom", "qualname": "EPDType.to_list", "kind": "function", "doc": "<p>Return a list of bytes representing the EEPROM data structure.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.eeprom.EPDType.set_color", "modulename": "inky.eeprom", "qualname": "EPDType.set_color", "kind": "function", "doc": "<p>Set the stored colour value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">color</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.eeprom.EPDType.get_color", "modulename": "inky.eeprom", "qualname": "EPDType.get_color", "kind": "function", "doc": "<p>Get the stored colour value.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.eeprom.EPDType.get_variant", "modulename": "inky.eeprom", "qualname": "EPDType.get_variant", "kind": "function", "doc": "<p>Return text name of the display variant.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.eeprom.yellow_what_1_E", "modulename": "inky.eeprom", "qualname": "yellow_what_1_E", "kind": "variable", "doc": "<p></p>\n", "default_value": "Display: 400x300\nColor: yellow\nPCB Variant: 1.2\nDisplay Variant: 2\nTime: 2025-02-05 16:38:57.145844"}, {"fullname": "inky.eeprom.black_what_1_E", "modulename": "inky.eeprom", "qualname": "black_what_1_E", "kind": "variable", "doc": "<p></p>\n", "default_value": "Display: 400x300\nColor: black\nPCB Variant: 1.2\nDisplay Variant: 3\nTime: 2025-02-05 16:38:57.145959"}, {"fullname": "inky.eeprom.black_phat_1_E", "modulename": "inky.eeprom", "qualname": "black_phat_1_E", "kind": "variable", "doc": "<p></p>\n", "default_value": "Display: 212x104\nColor: black\nPCB Variant: 1.2\nDisplay Variant: 4\nTime: 2025-02-05 16:38:57.145991"}, {"fullname": "inky.eeprom.red_small_1_E", "modulename": "inky.eeprom", "qualname": "red_small_1_E", "kind": "variable", "doc": "<p></p>\n", "default_value": "Display: 212x104\nColor: red\nPCB Variant: 1.2\nDisplay Variant: 1\nTime: 2025-02-05 16:38:57.146021"}, {"fullname": "inky.eeprom.read_eeprom", "modulename": "inky.eeprom", "qualname": "read_eeprom", "kind": "function", "doc": "<p>Return a class representing EEPROM contents, or none.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i2c_bus</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.eeprom.main", "modulename": "inky.eeprom", "qualname": "main", "kind": "function", "doc": "<p>EEPROM Test Function.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">args</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky", "modulename": "inky.inky", "kind": "module", "doc": "<p>Inky e-Ink Display Driver.</p>\n"}, {"fullname": "inky.inky.WHITE", "modulename": "inky.inky", "qualname": "WHITE", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "inky.inky.BLACK", "modulename": "inky.inky", "qualname": "BLACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.inky.RESET_PIN", "modulename": "inky.inky", "qualname": "RESET_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "27"}, {"fullname": "inky.inky.BUSY_PIN", "modulename": "inky.inky", "qualname": "BUSY_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "17"}, {"fullname": "inky.inky.DC_PIN", "modulename": "inky.inky", "qualname": "DC_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "22"}, {"fullname": "inky.inky.MOSI_PIN", "modulename": "inky.inky", "qualname": "MOSI_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "10"}, {"fullname": "inky.inky.SCLK_PIN", "modulename": "inky.inky", "qualname": "SCLK_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "11"}, {"fullname": "inky.inky.CS0_PIN", "modulename": "inky.inky", "qualname": "CS0_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "8"}, {"fullname": "inky.inky.Inky", "modulename": "inky.inky", "qualname": "Inky", "kind": "class", "doc": "<p>Inky e-Ink Display Driver.</p>\n\n<p>Generally it is more convenient to use either the <code>inky.InkyPHAT</code> or <code>inky.InkyWHAT</code> classes.</p>\n"}, {"fullname": "inky.inky.Inky.__init__", "modulename": "inky.inky", "qualname": "Inky.__init__", "kind": "function", "doc": "<p>Initialise an Inky Display.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>resolution: Display resolution (width, height) in pixels, default</strong>:  (400, 300).</li>\n<li><strong>str colour: One of \"red\", \"black\" or \"yellow\", default</strong>:  \"black\".</li>\n<li><strong>int cs_channel: Chip-select channel for SPI communication, default</strong>:  <code>0</code>.</li>\n<li><strong>int dc_pin: Data/command pin for SPI communication, default</strong>:  <code>22</code>.</li>\n<li><strong>int reset_pin: Device reset pin, default</strong>:  <code>27</code>.</li>\n<li><strong>int busy_pin: Device busy/wait pin</strong>:  <code>17</code>.</li>\n<li><strong>bool h_flip: Enable horizontal display flip, default</strong>:  <code>False</code>.</li>\n<li><strong>bool v_flip: Enable vertical display flip, default</strong>:  <code>False</code>.</li>\n<li><strong>spi_bus: SPI device. If <code>None</code> then a default <code>spidev.SpiDev</code> object is used. Default</strong>:  <code>None</code>.</li>\n<li><strong>i2c_bus</strong>:  SMB object. If <code>None</code> then <code>smbus2.SMBus(1)</code> is used.</li>\n<li><strong>gpio</strong>:  deprecated</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">resolution</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">400</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">colour</span><span class=\"o\">=</span><span class=\"s1\">&#39;black&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">cs_pin</span><span class=\"o\">=</span><span class=\"mi\">8</span>,</span><span class=\"param\">\t<span class=\"n\">dc_pin</span><span class=\"o\">=</span><span class=\"mi\">22</span>,</span><span class=\"param\">\t<span class=\"n\">reset_pin</span><span class=\"o\">=</span><span class=\"mi\">27</span>,</span><span class=\"param\">\t<span class=\"n\">busy_pin</span><span class=\"o\">=</span><span class=\"mi\">17</span>,</span><span class=\"param\">\t<span class=\"n\">h_flip</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">v_flip</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">spi_bus</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">i2c_bus</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">gpio</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "inky.inky.Inky.WHITE", "modulename": "inky.inky", "qualname": "Inky.WHITE", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "inky.inky.Inky.BLACK", "modulename": "inky.inky", "qualname": "Inky.BLACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.inky.Inky.RED", "modulename": "inky.inky", "qualname": "Inky.RED", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.inky.Inky.YELLOW", "modulename": "inky.inky", "qualname": "Inky.YELLOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.inky.Inky.resolution", "modulename": "inky.inky", "qualname": "Inky.resolution", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky.Inky.colour", "modulename": "inky.inky", "qualname": "Inky.colour", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky.Inky.eeprom", "modulename": "inky.inky", "qualname": "Inky.eeprom", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky.Inky.lut", "modulename": "inky.inky", "qualname": "Inky.lut", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky.Inky.buf", "modulename": "inky.inky", "qualname": "Inky.buf", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky.Inky.border_colour", "modulename": "inky.inky", "qualname": "Inky.border_colour", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky.Inky.dc_pin", "modulename": "inky.inky", "qualname": "Inky.dc_pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky.Inky.reset_pin", "modulename": "inky.inky", "qualname": "Inky.reset_pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky.Inky.busy_pin", "modulename": "inky.inky", "qualname": "Inky.busy_pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky.Inky.cs_pin", "modulename": "inky.inky", "qualname": "Inky.cs_pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky.Inky.h_flip", "modulename": "inky.inky", "qualname": "Inky.h_flip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky.Inky.v_flip", "modulename": "inky.inky", "qualname": "Inky.v_flip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky.Inky.setup", "modulename": "inky.inky", "qualname": "Inky.setup", "kind": "function", "doc": "<p>Set up Inky GPIO and reset display.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky.Inky.set_pixel", "modulename": "inky.inky", "qualname": "Inky.set_pixel", "kind": "function", "doc": "<p>Set a single pixel on the buffer.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>int x</strong>:  x position on display.</li>\n<li><strong>int y</strong>:  y position on display.</li>\n<li><strong>int v</strong>:  Colour to set, valid values are <code>inky.BLACK</code>, <code>inky.WHITE</code>, <code>inky.RED</code> and <code>inky.YELLOW</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">v</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky.Inky.show", "modulename": "inky.inky", "qualname": "Inky.show", "kind": "function", "doc": "<p>Show buffer on display.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bool busy_wait: If True, wait for display update to finish before returning, default</strong>:  <code>True</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">busy_wait</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky.Inky.set_border", "modulename": "inky.inky", "qualname": "Inky.set_border", "kind": "function", "doc": "<p>Set the border colour.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>int colour</strong>:  The border colour. Valid values are <code>inky.BLACK</code>, <code>inky.WHITE</code>, <code>inky.RED</code> and <code>inky.YELLOW</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">colour</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky.Inky.set_image", "modulename": "inky.inky", "qualname": "Inky.set_image", "kind": "function", "doc": "<p>Copy an image to the buffer.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">image</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky_ac073tc1a", "modulename": "inky.inky_ac073tc1a", "kind": "module", "doc": "<p>Inky e-Ink Display Driver.</p>\n"}, {"fullname": "inky.inky_ac073tc1a.BLACK", "modulename": "inky.inky_ac073tc1a", "qualname": "BLACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "inky.inky_ac073tc1a.WHITE", "modulename": "inky.inky_ac073tc1a", "qualname": "WHITE", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.inky_ac073tc1a.GREEN", "modulename": "inky.inky_ac073tc1a", "qualname": "GREEN", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.inky_ac073tc1a.BLUE", "modulename": "inky.inky_ac073tc1a", "qualname": "BLUE", "kind": "variable", "doc": "<p></p>\n", "default_value": "3"}, {"fullname": "inky.inky_ac073tc1a.RED", "modulename": "inky.inky_ac073tc1a", "qualname": "RED", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "inky.inky_ac073tc1a.YELLOW", "modulename": "inky.inky_ac073tc1a", "qualname": "YELLOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "5"}, {"fullname": "inky.inky_ac073tc1a.ORANGE", "modulename": "inky.inky_ac073tc1a", "qualname": "ORANGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "6"}, {"fullname": "inky.inky_ac073tc1a.CLEAN", "modulename": "inky.inky_ac073tc1a", "qualname": "CLEAN", "kind": "variable", "doc": "<p></p>\n", "default_value": "7"}, {"fullname": "inky.inky_ac073tc1a.RESET_PIN", "modulename": "inky.inky_ac073tc1a", "qualname": "RESET_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "27"}, {"fullname": "inky.inky_ac073tc1a.BUSY_PIN", "modulename": "inky.inky_ac073tc1a", "qualname": "BUSY_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "17"}, {"fullname": "inky.inky_ac073tc1a.DC_PIN", "modulename": "inky.inky_ac073tc1a", "qualname": "DC_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "22"}, {"fullname": "inky.inky_ac073tc1a.MOSI_PIN", "modulename": "inky.inky_ac073tc1a", "qualname": "MOSI_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "10"}, {"fullname": "inky.inky_ac073tc1a.SCLK_PIN", "modulename": "inky.inky_ac073tc1a", "qualname": "SCLK_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "11"}, {"fullname": "inky.inky_ac073tc1a.CS0_PIN", "modulename": "inky.inky_ac073tc1a", "qualname": "CS0_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "8"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_PSR", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_PSR", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_PWR", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_PWR", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_POF", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_POF", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_POFS", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_POFS", "kind": "variable", "doc": "<p></p>\n", "default_value": "3"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_PON", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_PON", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_BTST1", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_BTST1", "kind": "variable", "doc": "<p></p>\n", "default_value": "5"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_BTST2", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_BTST2", "kind": "variable", "doc": "<p></p>\n", "default_value": "6"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_DSLP", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_DSLP", "kind": "variable", "doc": "<p></p>\n", "default_value": "7"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_BTST3", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_BTST3", "kind": "variable", "doc": "<p></p>\n", "default_value": "8"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_DTM", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_DTM", "kind": "variable", "doc": "<p></p>\n", "default_value": "16"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_DSP", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_DSP", "kind": "variable", "doc": "<p></p>\n", "default_value": "17"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_DRF", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_DRF", "kind": "variable", "doc": "<p></p>\n", "default_value": "18"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_IPC", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_IPC", "kind": "variable", "doc": "<p></p>\n", "default_value": "19"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_PLL", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_PLL", "kind": "variable", "doc": "<p></p>\n", "default_value": "48"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_TSC", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_TSC", "kind": "variable", "doc": "<p></p>\n", "default_value": "64"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_TSE", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_TSE", "kind": "variable", "doc": "<p></p>\n", "default_value": "65"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_TSW", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_TSW", "kind": "variable", "doc": "<p></p>\n", "default_value": "66"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_TSR", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_TSR", "kind": "variable", "doc": "<p></p>\n", "default_value": "67"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_CDI", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_CDI", "kind": "variable", "doc": "<p></p>\n", "default_value": "80"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_LPD", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_LPD", "kind": "variable", "doc": "<p></p>\n", "default_value": "81"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_TCON", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_TCON", "kind": "variable", "doc": "<p></p>\n", "default_value": "96"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_TRES", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_TRES", "kind": "variable", "doc": "<p></p>\n", "default_value": "97"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_DAM", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_DAM", "kind": "variable", "doc": "<p></p>\n", "default_value": "101"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_REV", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_REV", "kind": "variable", "doc": "<p></p>\n", "default_value": "112"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_FLG", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_FLG", "kind": "variable", "doc": "<p></p>\n", "default_value": "113"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_AMV", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_AMV", "kind": "variable", "doc": "<p></p>\n", "default_value": "128"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_VV", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_VV", "kind": "variable", "doc": "<p></p>\n", "default_value": "129"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_VDCS", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_VDCS", "kind": "variable", "doc": "<p></p>\n", "default_value": "130"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_T_VDCS", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_T_VDCS", "kind": "variable", "doc": "<p></p>\n", "default_value": "132"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_AGID", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_AGID", "kind": "variable", "doc": "<p></p>\n", "default_value": "134"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_CMDH", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_CMDH", "kind": "variable", "doc": "<p></p>\n", "default_value": "170"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_CCSET", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_CCSET", "kind": "variable", "doc": "<p></p>\n", "default_value": "224"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_PWS", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_PWS", "kind": "variable", "doc": "<p></p>\n", "default_value": "227"}, {"fullname": "inky.inky_ac073tc1a.AC073TC1_TSSET", "modulename": "inky.inky_ac073tc1a", "qualname": "AC073TC1_TSSET", "kind": "variable", "doc": "<p></p>\n", "default_value": "230"}, {"fullname": "inky.inky_ac073tc1a.Inky", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky", "kind": "class", "doc": "<p>Inky e-Ink Display Driver.</p>\n"}, {"fullname": "inky.inky_ac073tc1a.Inky.__init__", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.__init__", "kind": "function", "doc": "<p>Initialise an Inky Display.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>resolution: (width, height) in pixels, default</strong>:  (600, 448)</li>\n<li><strong>colour: one of red, black or yellow, default</strong>:  black</li>\n<li><strong>cs_pin</strong>:  chip-select pin for SPI communication</li>\n<li><strong>dc_pin</strong>:  data/command pin for SPI communication</li>\n<li><strong>reset_pin</strong>:  device reset pin</li>\n<li><strong>busy_pin</strong>:  device busy/wait pin</li>\n<li><strong>h_flip: enable horizontal display flip, default</strong>:  False</li>\n<li><strong>v_flip: enable vertical display flip, default</strong>:  False</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">resolution</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">colour</span><span class=\"o\">=</span><span class=\"s1\">&#39;multi&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">cs_pin</span><span class=\"o\">=</span><span class=\"mi\">8</span>,</span><span class=\"param\">\t<span class=\"n\">dc_pin</span><span class=\"o\">=</span><span class=\"mi\">22</span>,</span><span class=\"param\">\t<span class=\"n\">reset_pin</span><span class=\"o\">=</span><span class=\"mi\">27</span>,</span><span class=\"param\">\t<span class=\"n\">busy_pin</span><span class=\"o\">=</span><span class=\"mi\">17</span>,</span><span class=\"param\">\t<span class=\"n\">h_flip</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">v_flip</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">spi_bus</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">i2c_bus</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">gpio</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "inky.inky_ac073tc1a.Inky.BLACK", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.BLACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "inky.inky_ac073tc1a.Inky.WHITE", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.WHITE", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.inky_ac073tc1a.Inky.GREEN", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.GREEN", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.inky_ac073tc1a.Inky.BLUE", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.BLUE", "kind": "variable", "doc": "<p></p>\n", "default_value": "3"}, {"fullname": "inky.inky_ac073tc1a.Inky.RED", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.RED", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "inky.inky_ac073tc1a.Inky.YELLOW", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.YELLOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "5"}, {"fullname": "inky.inky_ac073tc1a.Inky.ORANGE", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.ORANGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "6"}, {"fullname": "inky.inky_ac073tc1a.Inky.CLEAN", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.CLEAN", "kind": "variable", "doc": "<p></p>\n", "default_value": "7"}, {"fullname": "inky.inky_ac073tc1a.Inky.WIDTH", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.WIDTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "800"}, {"fullname": "inky.inky_ac073tc1a.Inky.HEIGHT", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.HEIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "480"}, {"fullname": "inky.inky_ac073tc1a.Inky.DESATURATED_PALETTE", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.DESATURATED_PALETTE", "kind": "variable", "doc": "<p></p>\n", "default_value": "[[0, 0, 0], [255, 255, 255], [0, 255, 0], [0, 0, 255], [255, 0, 0], [255, 255, 0], [255, 140, 0], [255, 255, 255]]"}, {"fullname": "inky.inky_ac073tc1a.Inky.SATURATED_PALETTE", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.SATURATED_PALETTE", "kind": "variable", "doc": "<p></p>\n", "default_value": "[[0, 0, 0], [217, 242, 255], [3, 124, 76], [27, 46, 198], [245, 80, 34], [255, 255, 68], [239, 121, 44], [255, 255, 255]]"}, {"fullname": "inky.inky_ac073tc1a.Inky.eeprom", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.eeprom", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ac073tc1a.Inky.resolution", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.resolution", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ac073tc1a.Inky.border_colour", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.border_colour", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ac073tc1a.Inky.colour", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.colour", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ac073tc1a.Inky.lut", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.lut", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ac073tc1a.Inky.buf", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.buf", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ac073tc1a.Inky.dc_pin", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.dc_pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ac073tc1a.Inky.reset_pin", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.reset_pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ac073tc1a.Inky.busy_pin", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.busy_pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ac073tc1a.Inky.cs_pin", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.cs_pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ac073tc1a.Inky.h_flip", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.h_flip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ac073tc1a.Inky.v_flip", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.v_flip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ac073tc1a.Inky.setup", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.setup", "kind": "function", "doc": "<p>Set up Inky GPIO and reset display.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky_ac073tc1a.Inky.set_pixel", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.set_pixel", "kind": "function", "doc": "<p>Set a single pixel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong>:  x position on display</li>\n<li><strong>y</strong>:  y position on display</li>\n<li><strong>v</strong>:  colour to set</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">v</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky_ac073tc1a.Inky.show", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.show", "kind": "function", "doc": "<p>Show buffer on display.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>busy_wait</strong>:  If True, wait for display update to finish before returning.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">busy_wait</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky_ac073tc1a.Inky.set_border", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.set_border", "kind": "function", "doc": "<p>Set the border colour.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">colour</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky_ac073tc1a.Inky.set_image", "modulename": "inky.inky_ac073tc1a", "qualname": "Inky.set_image", "kind": "function", "doc": "<p>Copy an image to the display.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image</strong>:  PIL image to copy, must be 600x448</li>\n<li><strong>saturation</strong>:  Saturation for quantization palette - higher value results in a more saturated image</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">image</span>, </span><span class=\"param\"><span class=\"n\">saturation</span><span class=\"o\">=</span><span class=\"mf\">0.5</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky_ssd1608", "modulename": "inky.inky_ssd1608", "kind": "module", "doc": "<p>Inky e-Ink Display Driver.</p>\n"}, {"fullname": "inky.inky_ssd1608.WHITE", "modulename": "inky.inky_ssd1608", "qualname": "WHITE", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "inky.inky_ssd1608.BLACK", "modulename": "inky.inky_ssd1608", "qualname": "BLACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.inky_ssd1608.RESET_PIN", "modulename": "inky.inky_ssd1608", "qualname": "RESET_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "27"}, {"fullname": "inky.inky_ssd1608.BUSY_PIN", "modulename": "inky.inky_ssd1608", "qualname": "BUSY_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "17"}, {"fullname": "inky.inky_ssd1608.DC_PIN", "modulename": "inky.inky_ssd1608", "qualname": "DC_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "22"}, {"fullname": "inky.inky_ssd1608.MOSI_PIN", "modulename": "inky.inky_ssd1608", "qualname": "MOSI_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "10"}, {"fullname": "inky.inky_ssd1608.SCLK_PIN", "modulename": "inky.inky_ssd1608", "qualname": "SCLK_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "11"}, {"fullname": "inky.inky_ssd1608.CS0_PIN", "modulename": "inky.inky_ssd1608", "qualname": "CS0_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "8"}, {"fullname": "inky.inky_ssd1608.Inky", "modulename": "inky.inky_ssd1608", "qualname": "Inky", "kind": "class", "doc": "<p>Inky e-Ink Display Driver.</p>\n"}, {"fullname": "inky.inky_ssd1608.Inky.__init__", "modulename": "inky.inky_ssd1608", "qualname": "Inky.__init__", "kind": "function", "doc": "<p>Initialise an Inky Display.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>resolution: (width, height) in pixels, default</strong>:  (400, 300)</li>\n<li><strong>colour: one of red, black or yellow, default</strong>:  black</li>\n<li><strong>cs_pin</strong>:  chip-select pin for SPI communication</li>\n<li><strong>dc_pin</strong>:  data/command pin for SPI communication</li>\n<li><strong>reset_pin</strong>:  device reset pin</li>\n<li><strong>busy_pin</strong>:  device busy/wait pin</li>\n<li><strong>h_flip: enable horizontal display flip, default</strong>:  False</li>\n<li><strong>v_flip: enable vertical display flip, default</strong>:  False</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">resolution</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">250</span><span class=\"p\">,</span> <span class=\"mi\">122</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">colour</span><span class=\"o\">=</span><span class=\"s1\">&#39;black&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">cs_pin</span><span class=\"o\">=</span><span class=\"mi\">8</span>,</span><span class=\"param\">\t<span class=\"n\">dc_pin</span><span class=\"o\">=</span><span class=\"mi\">22</span>,</span><span class=\"param\">\t<span class=\"n\">reset_pin</span><span class=\"o\">=</span><span class=\"mi\">27</span>,</span><span class=\"param\">\t<span class=\"n\">busy_pin</span><span class=\"o\">=</span><span class=\"mi\">17</span>,</span><span class=\"param\">\t<span class=\"n\">h_flip</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">v_flip</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">spi_bus</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">i2c_bus</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">gpio</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "inky.inky_ssd1608.Inky.WHITE", "modulename": "inky.inky_ssd1608", "qualname": "Inky.WHITE", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "inky.inky_ssd1608.Inky.BLACK", "modulename": "inky.inky_ssd1608", "qualname": "Inky.BLACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.inky_ssd1608.Inky.RED", "modulename": "inky.inky_ssd1608", "qualname": "Inky.RED", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.inky_ssd1608.Inky.YELLOW", "modulename": "inky.inky_ssd1608", "qualname": "Inky.YELLOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.inky_ssd1608.Inky.resolution", "modulename": "inky.inky_ssd1608", "qualname": "Inky.resolution", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1608.Inky.colour", "modulename": "inky.inky_ssd1608", "qualname": "Inky.colour", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1608.Inky.eeprom", "modulename": "inky.inky_ssd1608", "qualname": "Inky.eeprom", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1608.Inky.lut", "modulename": "inky.inky_ssd1608", "qualname": "Inky.lut", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1608.Inky.buf", "modulename": "inky.inky_ssd1608", "qualname": "Inky.buf", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1608.Inky.border_colour", "modulename": "inky.inky_ssd1608", "qualname": "Inky.border_colour", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1608.Inky.dc_pin", "modulename": "inky.inky_ssd1608", "qualname": "Inky.dc_pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1608.Inky.reset_pin", "modulename": "inky.inky_ssd1608", "qualname": "Inky.reset_pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1608.Inky.busy_pin", "modulename": "inky.inky_ssd1608", "qualname": "Inky.busy_pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1608.Inky.cs_pin", "modulename": "inky.inky_ssd1608", "qualname": "Inky.cs_pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1608.Inky.h_flip", "modulename": "inky.inky_ssd1608", "qualname": "Inky.h_flip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1608.Inky.v_flip", "modulename": "inky.inky_ssd1608", "qualname": "Inky.v_flip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1608.Inky.setup", "modulename": "inky.inky_ssd1608", "qualname": "Inky.setup", "kind": "function", "doc": "<p>Set up Inky GPIO and reset display.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky_ssd1608.Inky.set_pixel", "modulename": "inky.inky_ssd1608", "qualname": "Inky.set_pixel", "kind": "function", "doc": "<p>Set a single pixel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong>:  x position on display</li>\n<li><strong>y</strong>:  y position on display</li>\n<li><strong>v</strong>:  colour to set</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">v</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky_ssd1608.Inky.show", "modulename": "inky.inky_ssd1608", "qualname": "Inky.show", "kind": "function", "doc": "<p>Show buffer on display.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>busy_wait</strong>:  If True, wait for display update to finish before returning.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">busy_wait</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky_ssd1608.Inky.set_border", "modulename": "inky.inky_ssd1608", "qualname": "Inky.set_border", "kind": "function", "doc": "<p>Set the border colour.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">colour</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky_ssd1608.Inky.set_image", "modulename": "inky.inky_ssd1608", "qualname": "Inky.set_image", "kind": "function", "doc": "<p>Copy an image to the display.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">image</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky_ssd1683", "modulename": "inky.inky_ssd1683", "kind": "module", "doc": "<p>Inky e-Ink Display Driver.</p>\n"}, {"fullname": "inky.inky_ssd1683.WHITE", "modulename": "inky.inky_ssd1683", "qualname": "WHITE", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "inky.inky_ssd1683.BLACK", "modulename": "inky.inky_ssd1683", "qualname": "BLACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.inky_ssd1683.RESET_PIN", "modulename": "inky.inky_ssd1683", "qualname": "RESET_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "27"}, {"fullname": "inky.inky_ssd1683.BUSY_PIN", "modulename": "inky.inky_ssd1683", "qualname": "BUSY_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "17"}, {"fullname": "inky.inky_ssd1683.DC_PIN", "modulename": "inky.inky_ssd1683", "qualname": "DC_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "22"}, {"fullname": "inky.inky_ssd1683.MOSI_PIN", "modulename": "inky.inky_ssd1683", "qualname": "MOSI_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "10"}, {"fullname": "inky.inky_ssd1683.SCLK_PIN", "modulename": "inky.inky_ssd1683", "qualname": "SCLK_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "11"}, {"fullname": "inky.inky_ssd1683.CS0_PIN", "modulename": "inky.inky_ssd1683", "qualname": "CS0_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "8"}, {"fullname": "inky.inky_ssd1683.SUPPORTED_DISPLAYS", "modulename": "inky.inky_ssd1683", "qualname": "SUPPORTED_DISPLAYS", "kind": "variable", "doc": "<p></p>\n", "default_value": "(17, 18, 19)"}, {"fullname": "inky.inky_ssd1683.Inky", "modulename": "inky.inky_ssd1683", "qualname": "Inky", "kind": "class", "doc": "<p>Inky e-Ink Display Driver.</p>\n"}, {"fullname": "inky.inky_ssd1683.Inky.__init__", "modulename": "inky.inky_ssd1683", "qualname": "Inky.__init__", "kind": "function", "doc": "<p>Initialise an Inky Display.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>resolution: (width, height) in pixels, default</strong>:  (400, 300)</li>\n<li><strong>colour: one of red, black or yellow, default</strong>:  black</li>\n<li><strong>cs_pin</strong>:  chip-select pin for SPI communication</li>\n<li><strong>dc_pin</strong>:  data/command pin for SPI communication</li>\n<li><strong>reset_pin</strong>:  device reset pin</li>\n<li><strong>busy_pin</strong>:  device busy/wait pin</li>\n<li><strong>h_flip: enable horizontal display flip, default</strong>:  False</li>\n<li><strong>v_flip: enable vertical display flip, default</strong>:  False</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">resolution</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">400</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">colour</span><span class=\"o\">=</span><span class=\"s1\">&#39;black&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">cs_pin</span><span class=\"o\">=</span><span class=\"mi\">8</span>,</span><span class=\"param\">\t<span class=\"n\">dc_pin</span><span class=\"o\">=</span><span class=\"mi\">22</span>,</span><span class=\"param\">\t<span class=\"n\">reset_pin</span><span class=\"o\">=</span><span class=\"mi\">27</span>,</span><span class=\"param\">\t<span class=\"n\">busy_pin</span><span class=\"o\">=</span><span class=\"mi\">17</span>,</span><span class=\"param\">\t<span class=\"n\">h_flip</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">v_flip</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">spi_bus</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">i2c_bus</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">gpio</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "inky.inky_ssd1683.Inky.WHITE", "modulename": "inky.inky_ssd1683", "qualname": "Inky.WHITE", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "inky.inky_ssd1683.Inky.BLACK", "modulename": "inky.inky_ssd1683", "qualname": "Inky.BLACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.inky_ssd1683.Inky.RED", "modulename": "inky.inky_ssd1683", "qualname": "Inky.RED", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.inky_ssd1683.Inky.YELLOW", "modulename": "inky.inky_ssd1683", "qualname": "Inky.YELLOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.inky_ssd1683.Inky.resolution", "modulename": "inky.inky_ssd1683", "qualname": "Inky.resolution", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1683.Inky.colour", "modulename": "inky.inky_ssd1683", "qualname": "Inky.colour", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1683.Inky.eeprom", "modulename": "inky.inky_ssd1683", "qualname": "Inky.eeprom", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1683.Inky.lut", "modulename": "inky.inky_ssd1683", "qualname": "Inky.lut", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1683.Inky.buf", "modulename": "inky.inky_ssd1683", "qualname": "Inky.buf", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1683.Inky.border_colour", "modulename": "inky.inky_ssd1683", "qualname": "Inky.border_colour", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1683.Inky.dc_pin", "modulename": "inky.inky_ssd1683", "qualname": "Inky.dc_pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1683.Inky.reset_pin", "modulename": "inky.inky_ssd1683", "qualname": "Inky.reset_pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1683.Inky.busy_pin", "modulename": "inky.inky_ssd1683", "qualname": "Inky.busy_pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1683.Inky.cs_pin", "modulename": "inky.inky_ssd1683", "qualname": "Inky.cs_pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1683.Inky.h_flip", "modulename": "inky.inky_ssd1683", "qualname": "Inky.h_flip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1683.Inky.v_flip", "modulename": "inky.inky_ssd1683", "qualname": "Inky.v_flip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_ssd1683.Inky.setup", "modulename": "inky.inky_ssd1683", "qualname": "Inky.setup", "kind": "function", "doc": "<p>Set up Inky GPIO and reset display.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky_ssd1683.Inky.set_pixel", "modulename": "inky.inky_ssd1683", "qualname": "Inky.set_pixel", "kind": "function", "doc": "<p>Set a single pixel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong>:  x position on display</li>\n<li><strong>y</strong>:  y position on display</li>\n<li><strong>v</strong>:  colour to set</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">v</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky_ssd1683.Inky.show", "modulename": "inky.inky_ssd1683", "qualname": "Inky.show", "kind": "function", "doc": "<p>Show buffer on display.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>busy_wait</strong>:  If True, wait for display update to finish before returning.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">busy_wait</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky_ssd1683.Inky.set_border", "modulename": "inky.inky_ssd1683", "qualname": "Inky.set_border", "kind": "function", "doc": "<p>Set the border colour.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">colour</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky_ssd1683.Inky.set_image", "modulename": "inky.inky_ssd1683", "qualname": "Inky.set_image", "kind": "function", "doc": "<p>Copy an image to the display.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">image</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky_uc8159", "modulename": "inky.inky_uc8159", "kind": "module", "doc": "<p>Inky e-Ink Display Driver.</p>\n"}, {"fullname": "inky.inky_uc8159.BLACK", "modulename": "inky.inky_uc8159", "qualname": "BLACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "inky.inky_uc8159.WHITE", "modulename": "inky.inky_uc8159", "qualname": "WHITE", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.inky_uc8159.GREEN", "modulename": "inky.inky_uc8159", "qualname": "GREEN", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.inky_uc8159.BLUE", "modulename": "inky.inky_uc8159", "qualname": "BLUE", "kind": "variable", "doc": "<p></p>\n", "default_value": "3"}, {"fullname": "inky.inky_uc8159.RED", "modulename": "inky.inky_uc8159", "qualname": "RED", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "inky.inky_uc8159.YELLOW", "modulename": "inky.inky_uc8159", "qualname": "YELLOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "5"}, {"fullname": "inky.inky_uc8159.ORANGE", "modulename": "inky.inky_uc8159", "qualname": "ORANGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "6"}, {"fullname": "inky.inky_uc8159.CLEAN", "modulename": "inky.inky_uc8159", "qualname": "CLEAN", "kind": "variable", "doc": "<p></p>\n", "default_value": "7"}, {"fullname": "inky.inky_uc8159.DESATURATED_PALETTE", "modulename": "inky.inky_uc8159", "qualname": "DESATURATED_PALETTE", "kind": "variable", "doc": "<p></p>\n", "default_value": "[[0, 0, 0], [255, 255, 255], [0, 255, 0], [0, 0, 255], [255, 0, 0], [255, 255, 0], [255, 140, 0], [255, 255, 255]]"}, {"fullname": "inky.inky_uc8159.SATURATED_PALETTE", "modulename": "inky.inky_uc8159", "qualname": "SATURATED_PALETTE", "kind": "variable", "doc": "<p></p>\n", "default_value": "[[57, 48, 57], [255, 255, 255], [58, 91, 70], [61, 59, 94], [156, 72, 75], [208, 190, 71], [177, 106, 73], [255, 255, 255]]"}, {"fullname": "inky.inky_uc8159.RESET_PIN", "modulename": "inky.inky_uc8159", "qualname": "RESET_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "27"}, {"fullname": "inky.inky_uc8159.BUSY_PIN", "modulename": "inky.inky_uc8159", "qualname": "BUSY_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "17"}, {"fullname": "inky.inky_uc8159.DC_PIN", "modulename": "inky.inky_uc8159", "qualname": "DC_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "22"}, {"fullname": "inky.inky_uc8159.MOSI_PIN", "modulename": "inky.inky_uc8159", "qualname": "MOSI_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "10"}, {"fullname": "inky.inky_uc8159.SCLK_PIN", "modulename": "inky.inky_uc8159", "qualname": "SCLK_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "11"}, {"fullname": "inky.inky_uc8159.CS0_PIN", "modulename": "inky.inky_uc8159", "qualname": "CS0_PIN", "kind": "variable", "doc": "<p></p>\n", "default_value": "8"}, {"fullname": "inky.inky_uc8159.UC8159_PSR", "modulename": "inky.inky_uc8159", "qualname": "UC8159_PSR", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "inky.inky_uc8159.UC8159_PWR", "modulename": "inky.inky_uc8159", "qualname": "UC8159_PWR", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.inky_uc8159.UC8159_POF", "modulename": "inky.inky_uc8159", "qualname": "UC8159_POF", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.inky_uc8159.UC8159_PFS", "modulename": "inky.inky_uc8159", "qualname": "UC8159_PFS", "kind": "variable", "doc": "<p></p>\n", "default_value": "3"}, {"fullname": "inky.inky_uc8159.UC8159_PON", "modulename": "inky.inky_uc8159", "qualname": "UC8159_PON", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "inky.inky_uc8159.UC8159_BTST", "modulename": "inky.inky_uc8159", "qualname": "UC8159_BTST", "kind": "variable", "doc": "<p></p>\n", "default_value": "6"}, {"fullname": "inky.inky_uc8159.UC8159_DSLP", "modulename": "inky.inky_uc8159", "qualname": "UC8159_DSLP", "kind": "variable", "doc": "<p></p>\n", "default_value": "7"}, {"fullname": "inky.inky_uc8159.UC8159_DTM1", "modulename": "inky.inky_uc8159", "qualname": "UC8159_DTM1", "kind": "variable", "doc": "<p></p>\n", "default_value": "16"}, {"fullname": "inky.inky_uc8159.UC8159_DSP", "modulename": "inky.inky_uc8159", "qualname": "UC8159_DSP", "kind": "variable", "doc": "<p></p>\n", "default_value": "17"}, {"fullname": "inky.inky_uc8159.UC8159_DRF", "modulename": "inky.inky_uc8159", "qualname": "UC8159_DRF", "kind": "variable", "doc": "<p></p>\n", "default_value": "18"}, {"fullname": "inky.inky_uc8159.UC8159_IPC", "modulename": "inky.inky_uc8159", "qualname": "UC8159_IPC", "kind": "variable", "doc": "<p></p>\n", "default_value": "19"}, {"fullname": "inky.inky_uc8159.UC8159_PLL", "modulename": "inky.inky_uc8159", "qualname": "UC8159_PLL", "kind": "variable", "doc": "<p></p>\n", "default_value": "48"}, {"fullname": "inky.inky_uc8159.UC8159_TSC", "modulename": "inky.inky_uc8159", "qualname": "UC8159_TSC", "kind": "variable", "doc": "<p></p>\n", "default_value": "64"}, {"fullname": "inky.inky_uc8159.UC8159_TSE", "modulename": "inky.inky_uc8159", "qualname": "UC8159_TSE", "kind": "variable", "doc": "<p></p>\n", "default_value": "65"}, {"fullname": "inky.inky_uc8159.UC8159_TSW", "modulename": "inky.inky_uc8159", "qualname": "UC8159_TSW", "kind": "variable", "doc": "<p></p>\n", "default_value": "66"}, {"fullname": "inky.inky_uc8159.UC8159_TSR", "modulename": "inky.inky_uc8159", "qualname": "UC8159_TSR", "kind": "variable", "doc": "<p></p>\n", "default_value": "67"}, {"fullname": "inky.inky_uc8159.UC8159_CDI", "modulename": "inky.inky_uc8159", "qualname": "UC8159_CDI", "kind": "variable", "doc": "<p></p>\n", "default_value": "80"}, {"fullname": "inky.inky_uc8159.UC8159_LPD", "modulename": "inky.inky_uc8159", "qualname": "UC8159_LPD", "kind": "variable", "doc": "<p></p>\n", "default_value": "81"}, {"fullname": "inky.inky_uc8159.UC8159_TCON", "modulename": "inky.inky_uc8159", "qualname": "UC8159_TCON", "kind": "variable", "doc": "<p></p>\n", "default_value": "96"}, {"fullname": "inky.inky_uc8159.UC8159_TRES", "modulename": "inky.inky_uc8159", "qualname": "UC8159_TRES", "kind": "variable", "doc": "<p></p>\n", "default_value": "97"}, {"fullname": "inky.inky_uc8159.UC8159_DAM", "modulename": "inky.inky_uc8159", "qualname": "UC8159_DAM", "kind": "variable", "doc": "<p></p>\n", "default_value": "101"}, {"fullname": "inky.inky_uc8159.UC8159_REV", "modulename": "inky.inky_uc8159", "qualname": "UC8159_REV", "kind": "variable", "doc": "<p></p>\n", "default_value": "112"}, {"fullname": "inky.inky_uc8159.UC8159_FLG", "modulename": "inky.inky_uc8159", "qualname": "UC8159_FLG", "kind": "variable", "doc": "<p></p>\n", "default_value": "113"}, {"fullname": "inky.inky_uc8159.UC8159_AMV", "modulename": "inky.inky_uc8159", "qualname": "UC8159_AMV", "kind": "variable", "doc": "<p></p>\n", "default_value": "128"}, {"fullname": "inky.inky_uc8159.UC8159_VV", "modulename": "inky.inky_uc8159", "qualname": "UC8159_VV", "kind": "variable", "doc": "<p></p>\n", "default_value": "129"}, {"fullname": "inky.inky_uc8159.UC8159_VDCS", "modulename": "inky.inky_uc8159", "qualname": "UC8159_VDCS", "kind": "variable", "doc": "<p></p>\n", "default_value": "130"}, {"fullname": "inky.inky_uc8159.UC8159_PWS", "modulename": "inky.inky_uc8159", "qualname": "UC8159_PWS", "kind": "variable", "doc": "<p></p>\n", "default_value": "227"}, {"fullname": "inky.inky_uc8159.UC8159_TSSET", "modulename": "inky.inky_uc8159", "qualname": "UC8159_TSSET", "kind": "variable", "doc": "<p></p>\n", "default_value": "229"}, {"fullname": "inky.inky_uc8159.Inky", "modulename": "inky.inky_uc8159", "qualname": "Inky", "kind": "class", "doc": "<p>Inky e-Ink Display Driver.</p>\n"}, {"fullname": "inky.inky_uc8159.Inky.__init__", "modulename": "inky.inky_uc8159", "qualname": "Inky.__init__", "kind": "function", "doc": "<p>Initialise an Inky Display.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>resolution: (width, height) in pixels, default</strong>:  (600, 448)</li>\n<li><strong>colour: one of red, black or yellow, default</strong>:  black</li>\n<li><strong>cs_pin</strong>:  chip-select pin for SPI communication</li>\n<li><strong>dc_pin</strong>:  data/command pin for SPI communication</li>\n<li><strong>reset_pin</strong>:  device reset pin</li>\n<li><strong>busy_pin</strong>:  device busy/wait pin</li>\n<li><strong>h_flip: enable horizontal display flip, default</strong>:  False</li>\n<li><strong>v_flip: enable vertical display flip, default</strong>:  False</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">resolution</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">colour</span><span class=\"o\">=</span><span class=\"s1\">&#39;multi&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">cs_pin</span><span class=\"o\">=</span><span class=\"mi\">8</span>,</span><span class=\"param\">\t<span class=\"n\">dc_pin</span><span class=\"o\">=</span><span class=\"mi\">22</span>,</span><span class=\"param\">\t<span class=\"n\">reset_pin</span><span class=\"o\">=</span><span class=\"mi\">27</span>,</span><span class=\"param\">\t<span class=\"n\">busy_pin</span><span class=\"o\">=</span><span class=\"mi\">17</span>,</span><span class=\"param\">\t<span class=\"n\">h_flip</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">v_flip</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">spi_bus</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">i2c_bus</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">gpio</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "inky.inky_uc8159.Inky.BLACK", "modulename": "inky.inky_uc8159", "qualname": "Inky.BLACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "inky.inky_uc8159.Inky.WHITE", "modulename": "inky.inky_uc8159", "qualname": "Inky.WHITE", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.inky_uc8159.Inky.GREEN", "modulename": "inky.inky_uc8159", "qualname": "Inky.GREEN", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.inky_uc8159.Inky.BLUE", "modulename": "inky.inky_uc8159", "qualname": "Inky.BLUE", "kind": "variable", "doc": "<p></p>\n", "default_value": "3"}, {"fullname": "inky.inky_uc8159.Inky.RED", "modulename": "inky.inky_uc8159", "qualname": "Inky.RED", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "inky.inky_uc8159.Inky.YELLOW", "modulename": "inky.inky_uc8159", "qualname": "Inky.YELLOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "5"}, {"fullname": "inky.inky_uc8159.Inky.ORANGE", "modulename": "inky.inky_uc8159", "qualname": "Inky.ORANGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "6"}, {"fullname": "inky.inky_uc8159.Inky.CLEAN", "modulename": "inky.inky_uc8159", "qualname": "Inky.CLEAN", "kind": "variable", "doc": "<p></p>\n", "default_value": "7"}, {"fullname": "inky.inky_uc8159.Inky.WIDTH", "modulename": "inky.inky_uc8159", "qualname": "Inky.WIDTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "600"}, {"fullname": "inky.inky_uc8159.Inky.HEIGHT", "modulename": "inky.inky_uc8159", "qualname": "Inky.HEIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "448"}, {"fullname": "inky.inky_uc8159.Inky.DESATURATED_PALETTE", "modulename": "inky.inky_uc8159", "qualname": "Inky.DESATURATED_PALETTE", "kind": "variable", "doc": "<p></p>\n", "default_value": "[[0, 0, 0], [255, 255, 255], [0, 255, 0], [0, 0, 255], [255, 0, 0], [255, 255, 0], [255, 140, 0], [255, 255, 255]]"}, {"fullname": "inky.inky_uc8159.Inky.SATURATED_PALETTE", "modulename": "inky.inky_uc8159", "qualname": "Inky.SATURATED_PALETTE", "kind": "variable", "doc": "<p></p>\n", "default_value": "[[57, 48, 57], [255, 255, 255], [58, 91, 70], [61, 59, 94], [156, 72, 75], [208, 190, 71], [177, 106, 73], [255, 255, 255]]"}, {"fullname": "inky.inky_uc8159.Inky.eeprom", "modulename": "inky.inky_uc8159", "qualname": "Inky.eeprom", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_uc8159.Inky.resolution", "modulename": "inky.inky_uc8159", "qualname": "Inky.resolution", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_uc8159.Inky.border_colour", "modulename": "inky.inky_uc8159", "qualname": "Inky.border_colour", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_uc8159.Inky.colour", "modulename": "inky.inky_uc8159", "qualname": "Inky.colour", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_uc8159.Inky.lut", "modulename": "inky.inky_uc8159", "qualname": "Inky.lut", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_uc8159.Inky.buf", "modulename": "inky.inky_uc8159", "qualname": "Inky.buf", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_uc8159.Inky.dc_pin", "modulename": "inky.inky_uc8159", "qualname": "Inky.dc_pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_uc8159.Inky.reset_pin", "modulename": "inky.inky_uc8159", "qualname": "Inky.reset_pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_uc8159.Inky.busy_pin", "modulename": "inky.inky_uc8159", "qualname": "Inky.busy_pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_uc8159.Inky.cs_pin", "modulename": "inky.inky_uc8159", "qualname": "Inky.cs_pin", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_uc8159.Inky.h_flip", "modulename": "inky.inky_uc8159", "qualname": "Inky.h_flip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_uc8159.Inky.v_flip", "modulename": "inky.inky_uc8159", "qualname": "Inky.v_flip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.inky_uc8159.Inky.setup", "modulename": "inky.inky_uc8159", "qualname": "Inky.setup", "kind": "function", "doc": "<p>Set up Inky GPIO and reset display.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky_uc8159.Inky.set_pixel", "modulename": "inky.inky_uc8159", "qualname": "Inky.set_pixel", "kind": "function", "doc": "<p>Set a single pixel.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong>:  x position on display</li>\n<li><strong>y</strong>:  y position on display</li>\n<li><strong>v</strong>:  colour to set</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">v</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky_uc8159.Inky.show", "modulename": "inky.inky_uc8159", "qualname": "Inky.show", "kind": "function", "doc": "<p>Show buffer on display.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>busy_wait</strong>:  If True, wait for display update to finish before returning.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">busy_wait</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky_uc8159.Inky.set_border", "modulename": "inky.inky_uc8159", "qualname": "Inky.set_border", "kind": "function", "doc": "<p>Set the border colour.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">colour</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.inky_uc8159.Inky.set_image", "modulename": "inky.inky_uc8159", "qualname": "Inky.set_image", "kind": "function", "doc": "<p>Copy an image to the display.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image</strong>:  PIL image to copy, must be 600x448</li>\n<li><strong>saturation</strong>:  Saturation for quantization palette - higher value results in a more saturated image</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">image</span>, </span><span class=\"param\"><span class=\"n\">saturation</span><span class=\"o\">=</span><span class=\"mf\">0.5</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.mock", "modulename": "inky.mock", "kind": "module", "doc": "<p>PIL/Tkinter based simulator for InkyWHAT and InkyWHAT.</p>\n"}, {"fullname": "inky.mock.InkyMock", "modulename": "inky.mock", "qualname": "InkyMock", "kind": "class", "doc": "<p>Base simulator class for Inky.</p>\n", "bases": "inky.inky.Inky"}, {"fullname": "inky.mock.InkyMock.__init__", "modulename": "inky.mock", "qualname": "InkyMock.__init__", "kind": "function", "doc": "<p>Initialise an Inky pHAT Display.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>colour: one of red, black or yellow, default</strong>:  black</li>\n<li><strong>resolution</strong>:  (width, height) in pixels</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">colour</span>, </span><span class=\"param\"><span class=\"n\">h_flip</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">v_flip</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">resolution</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "inky.mock.InkyMock.resolution", "modulename": "inky.mock", "qualname": "InkyMock.resolution", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.mock.InkyMock.buf", "modulename": "inky.mock", "qualname": "InkyMock.buf", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.mock.InkyMock.colour", "modulename": "inky.mock", "qualname": "InkyMock.colour", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.mock.InkyMock.h_flip", "modulename": "inky.mock", "qualname": "InkyMock.h_flip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.mock.InkyMock.v_flip", "modulename": "inky.mock", "qualname": "InkyMock.v_flip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.mock.InkyMock.c_palette", "modulename": "inky.mock", "qualname": "InkyMock.c_palette", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.mock.InkyMock.tk_root", "modulename": "inky.mock", "qualname": "InkyMock.tk_root", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.mock.InkyMock.cv", "modulename": "inky.mock", "qualname": "InkyMock.cv", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.mock.InkyMock.cvh", "modulename": "inky.mock", "qualname": "InkyMock.cvh", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.mock.InkyMock.cvw", "modulename": "inky.mock", "qualname": "InkyMock.cvw", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "inky.mock.InkyMock.wait_for_window_close", "modulename": "inky.mock", "qualname": "InkyMock.wait_for_window_close", "kind": "function", "doc": "<p>Wait until the Tkinter window has closed.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.mock.InkyMock.resize", "modulename": "inky.mock", "qualname": "InkyMock.resize", "kind": "function", "doc": "<p>Resize background image to window size.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">event</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.mock.InkyMock.show", "modulename": "inky.mock", "qualname": "InkyMock.show", "kind": "function", "doc": "<p>Show buffer on display.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>busy_wait</strong>:  Ignored. Updates are simulated and instant.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">busy_wait</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.mock.InkyMockPHAT", "modulename": "inky.mock", "qualname": "InkyMockPHAT", "kind": "class", "doc": "<p>Inky PHAT (212x104) e-Ink Display Simulator.</p>\n", "bases": "InkyMock"}, {"fullname": "inky.mock.InkyMockPHAT.WIDTH", "modulename": "inky.mock", "qualname": "InkyMockPHAT.WIDTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "212"}, {"fullname": "inky.mock.InkyMockPHAT.HEIGHT", "modulename": "inky.mock", "qualname": "InkyMockPHAT.HEIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "104"}, {"fullname": "inky.mock.InkyMockPHAT.WHITE", "modulename": "inky.mock", "qualname": "InkyMockPHAT.WHITE", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "inky.mock.InkyMockPHAT.BLACK", "modulename": "inky.mock", "qualname": "InkyMockPHAT.BLACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.mock.InkyMockPHAT.RED", "modulename": "inky.mock", "qualname": "InkyMockPHAT.RED", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.mock.InkyMockPHAT.YELLOW", "modulename": "inky.mock", "qualname": "InkyMockPHAT.YELLOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.mock.InkyMockPHATSSD1608", "modulename": "inky.mock", "qualname": "InkyMockPHATSSD1608", "kind": "class", "doc": "<p>Inky PHAT SSD1608 (250x122) e-Ink Display Simulator.</p>\n", "bases": "InkyMock"}, {"fullname": "inky.mock.InkyMockPHATSSD1608.WIDTH", "modulename": "inky.mock", "qualname": "InkyMockPHATSSD1608.WIDTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "250"}, {"fullname": "inky.mock.InkyMockPHATSSD1608.HEIGHT", "modulename": "inky.mock", "qualname": "InkyMockPHATSSD1608.HEIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "122"}, {"fullname": "inky.mock.InkyMockPHATSSD1608.WHITE", "modulename": "inky.mock", "qualname": "InkyMockPHATSSD1608.WHITE", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "inky.mock.InkyMockPHATSSD1608.BLACK", "modulename": "inky.mock", "qualname": "InkyMockPHATSSD1608.BLACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.mock.InkyMockPHATSSD1608.RED", "modulename": "inky.mock", "qualname": "InkyMockPHATSSD1608.RED", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.mock.InkyMockPHATSSD1608.YELLOW", "modulename": "inky.mock", "qualname": "InkyMockPHATSSD1608.YELLOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.mock.InkyMockWHAT", "modulename": "inky.mock", "qualname": "InkyMockWHAT", "kind": "class", "doc": "<p>Inky wHAT e-Ink Display Simulator.</p>\n", "bases": "InkyMock"}, {"fullname": "inky.mock.InkyMockWHAT.WIDTH", "modulename": "inky.mock", "qualname": "InkyMockWHAT.WIDTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "400"}, {"fullname": "inky.mock.InkyMockWHAT.HEIGHT", "modulename": "inky.mock", "qualname": "InkyMockWHAT.HEIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "300"}, {"fullname": "inky.mock.InkyMockWHAT.WHITE", "modulename": "inky.mock", "qualname": "InkyMockWHAT.WHITE", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "inky.mock.InkyMockWHAT.BLACK", "modulename": "inky.mock", "qualname": "InkyMockWHAT.BLACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.mock.InkyMockWHAT.RED", "modulename": "inky.mock", "qualname": "InkyMockWHAT.RED", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.mock.InkyMockWHAT.YELLOW", "modulename": "inky.mock", "qualname": "InkyMockWHAT.YELLOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.mock.InkyMockImpression", "modulename": "inky.mock", "qualname": "InkyMockImpression", "kind": "class", "doc": "<p>Inky Impression e-Ink Display Simulator.</p>\n", "bases": "InkyMock"}, {"fullname": "inky.mock.InkyMockImpression.__init__", "modulename": "inky.mock", "qualname": "InkyMockImpression.__init__", "kind": "function", "doc": "<p>Initialize a new mock Inky Impression.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>resolution: (width, height) in pixels, default</strong>:  (600, 448)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">resolution</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "inky.mock.InkyMockImpression.BLACK", "modulename": "inky.mock", "qualname": "InkyMockImpression.BLACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "inky.mock.InkyMockImpression.WHITE", "modulename": "inky.mock", "qualname": "InkyMockImpression.WHITE", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.mock.InkyMockImpression.GREEN", "modulename": "inky.mock", "qualname": "InkyMockImpression.GREEN", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.mock.InkyMockImpression.BLUE", "modulename": "inky.mock", "qualname": "InkyMockImpression.BLUE", "kind": "variable", "doc": "<p></p>\n", "default_value": "3"}, {"fullname": "inky.mock.InkyMockImpression.RED", "modulename": "inky.mock", "qualname": "InkyMockImpression.RED", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "inky.mock.InkyMockImpression.YELLOW", "modulename": "inky.mock", "qualname": "InkyMockImpression.YELLOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "5"}, {"fullname": "inky.mock.InkyMockImpression.ORANGE", "modulename": "inky.mock", "qualname": "InkyMockImpression.ORANGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "6"}, {"fullname": "inky.mock.InkyMockImpression.CLEAN", "modulename": "inky.mock", "qualname": "InkyMockImpression.CLEAN", "kind": "variable", "doc": "<p></p>\n", "default_value": "7"}, {"fullname": "inky.mock.InkyMockImpression.WIDTH", "modulename": "inky.mock", "qualname": "InkyMockImpression.WIDTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "600"}, {"fullname": "inky.mock.InkyMockImpression.HEIGHT", "modulename": "inky.mock", "qualname": "InkyMockImpression.HEIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "448"}, {"fullname": "inky.mock.InkyMockImpression.DESATURATED_PALETTE", "modulename": "inky.mock", "qualname": "InkyMockImpression.DESATURATED_PALETTE", "kind": "variable", "doc": "<p></p>\n", "default_value": "[[0, 0, 0], [255, 255, 255], [0, 255, 0], [0, 0, 255], [255, 0, 0], [255, 255, 0], [255, 140, 0], [255, 255, 255]]"}, {"fullname": "inky.mock.InkyMockImpression.SATURATED_PALETTE", "modulename": "inky.mock", "qualname": "InkyMockImpression.SATURATED_PALETTE", "kind": "variable", "doc": "<p></p>\n", "default_value": "[[57, 48, 57], [255, 255, 255], [58, 91, 70], [61, 59, 94], [156, 72, 75], [208, 190, 71], [177, 106, 73], [255, 255, 255]]"}, {"fullname": "inky.mock.InkyMockImpression.set_pixel", "modulename": "inky.mock", "qualname": "InkyMockImpression.set_pixel", "kind": "function", "doc": "<p>Set a single pixel on the display.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">v</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.mock.InkyMockImpression.set_image", "modulename": "inky.mock", "qualname": "InkyMockImpression.set_image", "kind": "function", "doc": "<p>Copy an image to the display.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>image</strong>:  PIL image to copy, must be 600x448</li>\n<li><strong>saturation</strong>:  Saturation for quantization palette - higher value results in a more saturated image</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">image</span>, </span><span class=\"param\"><span class=\"n\">saturation</span><span class=\"o\">=</span><span class=\"mf\">0.5</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "inky.phat", "modulename": "inky.phat", "kind": "module", "doc": "<p><code>Inky pHAT</code>_ class and methods.</p>\n\n<p>A getting started <code>tutorial</code>_ for the Inky pHAT is available on the pimoroni website.</p>\n\n<p>The <code>pinout</code>_ for the Inky pHAT is documented on pinout.xyz</p>\n"}, {"fullname": "inky.phat.InkyPHAT_SSD1608", "modulename": "inky.phat", "qualname": "InkyPHAT_SSD1608", "kind": "class", "doc": "<p>Inky pHAT V2 (250x122 pixel) e-Ink Display Driver.</p>\n", "bases": "inky.inky_ssd1608.Inky"}, {"fullname": "inky.phat.InkyPHAT_SSD1608.__init__", "modulename": "inky.phat", "qualname": "InkyPHAT_SSD1608.__init__", "kind": "function", "doc": "<p>Initialise an Inky pHAT Display.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>colour: one of red, black or yellow, default</strong>:  black</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">colour</span></span>)</span>"}, {"fullname": "inky.phat.InkyPHAT_SSD1608.WIDTH", "modulename": "inky.phat", "qualname": "InkyPHAT_SSD1608.WIDTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "250"}, {"fullname": "inky.phat.InkyPHAT_SSD1608.HEIGHT", "modulename": "inky.phat", "qualname": "InkyPHAT_SSD1608.HEIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "122"}, {"fullname": "inky.phat.InkyPHAT_SSD1608.WHITE", "modulename": "inky.phat", "qualname": "InkyPHAT_SSD1608.WHITE", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "inky.phat.InkyPHAT_SSD1608.BLACK", "modulename": "inky.phat", "qualname": "InkyPHAT_SSD1608.BLACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.phat.InkyPHAT_SSD1608.RED", "modulename": "inky.phat", "qualname": "InkyPHAT_SSD1608.RED", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.phat.InkyPHAT_SSD1608.YELLOW", "modulename": "inky.phat", "qualname": "InkyPHAT_SSD1608.YELLOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.phat.InkyPHAT", "modulename": "inky.phat", "qualname": "InkyPHAT", "kind": "class", "doc": "<p>Inky pHAT e-Ink Display Driver.</p>\n\n<p>:Example: ::</p>\n\n<pre><code>&gt;&gt;&gt; from inky import InkyPHAT\n&gt;&gt;&gt; display = InkyPHAT('red')\n&gt;&gt;&gt; display.set_border(display.BLACK)\n&gt;&gt;&gt; for x in range(display.WIDTH):\n&gt;&gt;&gt;     for y in range(display.HEIGHT):\n&gt;&gt;&gt;         display.set_pixel(x, y, display.RED)\n&gt;&gt;&gt; display.show()\n</code></pre>\n", "bases": "inky.inky.Inky"}, {"fullname": "inky.phat.InkyPHAT.__init__", "modulename": "inky.phat", "qualname": "InkyPHAT.__init__", "kind": "function", "doc": "<p>Initialise an Inky pHAT Display.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>str colour: one of 'red', 'black' or 'yellow', default</strong>:  'black'.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">colour</span><span class=\"o\">=</span><span class=\"s1\">&#39;black&#39;</span></span>)</span>"}, {"fullname": "inky.phat.InkyPHAT.WIDTH", "modulename": "inky.phat", "qualname": "InkyPHAT.WIDTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "212"}, {"fullname": "inky.phat.InkyPHAT.HEIGHT", "modulename": "inky.phat", "qualname": "InkyPHAT.HEIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "104"}, {"fullname": "inky.phat.InkyPHAT.WHITE", "modulename": "inky.phat", "qualname": "InkyPHAT.WHITE", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "inky.phat.InkyPHAT.BLACK", "modulename": "inky.phat", "qualname": "InkyPHAT.BLACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.phat.InkyPHAT.RED", "modulename": "inky.phat", "qualname": "InkyPHAT.RED", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.phat.InkyPHAT.YELLOW", "modulename": "inky.phat", "qualname": "InkyPHAT.YELLOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.ssd1608", "modulename": "inky.ssd1608", "kind": "module", "doc": "<p>Constants for SSD1608 driver IC.</p>\n"}, {"fullname": "inky.ssd1608.DRIVER_CONTROL", "modulename": "inky.ssd1608", "qualname": "DRIVER_CONTROL", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.ssd1608.GATE_VOLTAGE", "modulename": "inky.ssd1608", "qualname": "GATE_VOLTAGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "3"}, {"fullname": "inky.ssd1608.SOURCE_VOLTAGE", "modulename": "inky.ssd1608", "qualname": "SOURCE_VOLTAGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "inky.ssd1608.DISPLAY_CONTROL", "modulename": "inky.ssd1608", "qualname": "DISPLAY_CONTROL", "kind": "variable", "doc": "<p></p>\n", "default_value": "7"}, {"fullname": "inky.ssd1608.NON_OVERLAP", "modulename": "inky.ssd1608", "qualname": "NON_OVERLAP", "kind": "variable", "doc": "<p></p>\n", "default_value": "11"}, {"fullname": "inky.ssd1608.BOOSTER_SOFT_START", "modulename": "inky.ssd1608", "qualname": "BOOSTER_SOFT_START", "kind": "variable", "doc": "<p></p>\n", "default_value": "12"}, {"fullname": "inky.ssd1608.GATE_SCAN_START", "modulename": "inky.ssd1608", "qualname": "GATE_SCAN_START", "kind": "variable", "doc": "<p></p>\n", "default_value": "15"}, {"fullname": "inky.ssd1608.DEEP_SLEEP", "modulename": "inky.ssd1608", "qualname": "DEEP_SLEEP", "kind": "variable", "doc": "<p></p>\n", "default_value": "16"}, {"fullname": "inky.ssd1608.DATA_MODE", "modulename": "inky.ssd1608", "qualname": "DATA_MODE", "kind": "variable", "doc": "<p></p>\n", "default_value": "17"}, {"fullname": "inky.ssd1608.SW_RESET", "modulename": "inky.ssd1608", "qualname": "SW_RESET", "kind": "variable", "doc": "<p></p>\n", "default_value": "18"}, {"fullname": "inky.ssd1608.TEMP_WRITE", "modulename": "inky.ssd1608", "qualname": "TEMP_WRITE", "kind": "variable", "doc": "<p></p>\n", "default_value": "26"}, {"fullname": "inky.ssd1608.TEMP_READ", "modulename": "inky.ssd1608", "qualname": "TEMP_READ", "kind": "variable", "doc": "<p></p>\n", "default_value": "27"}, {"fullname": "inky.ssd1608.TEMP_CONTROL", "modulename": "inky.ssd1608", "qualname": "TEMP_CONTROL", "kind": "variable", "doc": "<p></p>\n", "default_value": "28"}, {"fullname": "inky.ssd1608.TEMP_LOAD", "modulename": "inky.ssd1608", "qualname": "TEMP_LOAD", "kind": "variable", "doc": "<p></p>\n", "default_value": "29"}, {"fullname": "inky.ssd1608.MASTER_ACTIVATE", "modulename": "inky.ssd1608", "qualname": "MASTER_ACTIVATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "32"}, {"fullname": "inky.ssd1608.DISP_CTRL1", "modulename": "inky.ssd1608", "qualname": "DISP_CTRL1", "kind": "variable", "doc": "<p></p>\n", "default_value": "33"}, {"fullname": "inky.ssd1608.DISP_CTRL2", "modulename": "inky.ssd1608", "qualname": "DISP_CTRL2", "kind": "variable", "doc": "<p></p>\n", "default_value": "34"}, {"fullname": "inky.ssd1608.WRITE_RAM", "modulename": "inky.ssd1608", "qualname": "WRITE_RAM", "kind": "variable", "doc": "<p></p>\n", "default_value": "36"}, {"fullname": "inky.ssd1608.WRITE_ALTRAM", "modulename": "inky.ssd1608", "qualname": "WRITE_ALTRAM", "kind": "variable", "doc": "<p></p>\n", "default_value": "38"}, {"fullname": "inky.ssd1608.READ_RAM", "modulename": "inky.ssd1608", "qualname": "READ_RAM", "kind": "variable", "doc": "<p></p>\n", "default_value": "37"}, {"fullname": "inky.ssd1608.VCOM_SENSE", "modulename": "inky.ssd1608", "qualname": "VCOM_SENSE", "kind": "variable", "doc": "<p></p>\n", "default_value": "40"}, {"fullname": "inky.ssd1608.VCOM_DURATION", "modulename": "inky.ssd1608", "qualname": "VCOM_DURATION", "kind": "variable", "doc": "<p></p>\n", "default_value": "41"}, {"fullname": "inky.ssd1608.WRITE_VCOM", "modulename": "inky.ssd1608", "qualname": "WRITE_VCOM", "kind": "variable", "doc": "<p></p>\n", "default_value": "44"}, {"fullname": "inky.ssd1608.READ_OTP", "modulename": "inky.ssd1608", "qualname": "READ_OTP", "kind": "variable", "doc": "<p></p>\n", "default_value": "45"}, {"fullname": "inky.ssd1608.WRITE_LUT", "modulename": "inky.ssd1608", "qualname": "WRITE_LUT", "kind": "variable", "doc": "<p></p>\n", "default_value": "50"}, {"fullname": "inky.ssd1608.WRITE_DUMMY", "modulename": "inky.ssd1608", "qualname": "WRITE_DUMMY", "kind": "variable", "doc": "<p></p>\n", "default_value": "58"}, {"fullname": "inky.ssd1608.WRITE_GATELINE", "modulename": "inky.ssd1608", "qualname": "WRITE_GATELINE", "kind": "variable", "doc": "<p></p>\n", "default_value": "59"}, {"fullname": "inky.ssd1608.WRITE_BORDER", "modulename": "inky.ssd1608", "qualname": "WRITE_BORDER", "kind": "variable", "doc": "<p></p>\n", "default_value": "60"}, {"fullname": "inky.ssd1608.SET_RAMXPOS", "modulename": "inky.ssd1608", "qualname": "SET_RAMXPOS", "kind": "variable", "doc": "<p></p>\n", "default_value": "68"}, {"fullname": "inky.ssd1608.SET_RAMYPOS", "modulename": "inky.ssd1608", "qualname": "SET_RAMYPOS", "kind": "variable", "doc": "<p></p>\n", "default_value": "69"}, {"fullname": "inky.ssd1608.SET_RAMXCOUNT", "modulename": "inky.ssd1608", "qualname": "SET_RAMXCOUNT", "kind": "variable", "doc": "<p></p>\n", "default_value": "78"}, {"fullname": "inky.ssd1608.SET_RAMYCOUNT", "modulename": "inky.ssd1608", "qualname": "SET_RAMYCOUNT", "kind": "variable", "doc": "<p></p>\n", "default_value": "79"}, {"fullname": "inky.ssd1608.NOP", "modulename": "inky.ssd1608", "qualname": "NOP", "kind": "variable", "doc": "<p></p>\n", "default_value": "255"}, {"fullname": "inky.ssd1683", "modulename": "inky.ssd1683", "kind": "module", "doc": "<p>Constants for SSD1608 driver IC.</p>\n"}, {"fullname": "inky.ssd1683.DRIVER_CONTROL", "modulename": "inky.ssd1683", "qualname": "DRIVER_CONTROL", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.ssd1683.GATE_VOLTAGE", "modulename": "inky.ssd1683", "qualname": "GATE_VOLTAGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "3"}, {"fullname": "inky.ssd1683.SOURCE_VOLTAGE", "modulename": "inky.ssd1683", "qualname": "SOURCE_VOLTAGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "4"}, {"fullname": "inky.ssd1683.DISPLAY_CONTROL", "modulename": "inky.ssd1683", "qualname": "DISPLAY_CONTROL", "kind": "variable", "doc": "<p></p>\n", "default_value": "7"}, {"fullname": "inky.ssd1683.NON_OVERLAP", "modulename": "inky.ssd1683", "qualname": "NON_OVERLAP", "kind": "variable", "doc": "<p></p>\n", "default_value": "11"}, {"fullname": "inky.ssd1683.BOOSTER_SOFT_START", "modulename": "inky.ssd1683", "qualname": "BOOSTER_SOFT_START", "kind": "variable", "doc": "<p></p>\n", "default_value": "12"}, {"fullname": "inky.ssd1683.GATE_SCAN_START", "modulename": "inky.ssd1683", "qualname": "GATE_SCAN_START", "kind": "variable", "doc": "<p></p>\n", "default_value": "15"}, {"fullname": "inky.ssd1683.DEEP_SLEEP", "modulename": "inky.ssd1683", "qualname": "DEEP_SLEEP", "kind": "variable", "doc": "<p></p>\n", "default_value": "16"}, {"fullname": "inky.ssd1683.DATA_MODE", "modulename": "inky.ssd1683", "qualname": "DATA_MODE", "kind": "variable", "doc": "<p></p>\n", "default_value": "17"}, {"fullname": "inky.ssd1683.SW_RESET", "modulename": "inky.ssd1683", "qualname": "SW_RESET", "kind": "variable", "doc": "<p></p>\n", "default_value": "18"}, {"fullname": "inky.ssd1683.TEMP_WRITE", "modulename": "inky.ssd1683", "qualname": "TEMP_WRITE", "kind": "variable", "doc": "<p></p>\n", "default_value": "26"}, {"fullname": "inky.ssd1683.TEMP_READ", "modulename": "inky.ssd1683", "qualname": "TEMP_READ", "kind": "variable", "doc": "<p></p>\n", "default_value": "27"}, {"fullname": "inky.ssd1683.TEMP_CONTROL", "modulename": "inky.ssd1683", "qualname": "TEMP_CONTROL", "kind": "variable", "doc": "<p></p>\n", "default_value": "24"}, {"fullname": "inky.ssd1683.TEMP_LOAD", "modulename": "inky.ssd1683", "qualname": "TEMP_LOAD", "kind": "variable", "doc": "<p></p>\n", "default_value": "26"}, {"fullname": "inky.ssd1683.MASTER_ACTIVATE", "modulename": "inky.ssd1683", "qualname": "MASTER_ACTIVATE", "kind": "variable", "doc": "<p></p>\n", "default_value": "32"}, {"fullname": "inky.ssd1683.DISP_CTRL1", "modulename": "inky.ssd1683", "qualname": "DISP_CTRL1", "kind": "variable", "doc": "<p></p>\n", "default_value": "33"}, {"fullname": "inky.ssd1683.DISP_CTRL2", "modulename": "inky.ssd1683", "qualname": "DISP_CTRL2", "kind": "variable", "doc": "<p></p>\n", "default_value": "34"}, {"fullname": "inky.ssd1683.WRITE_RAM", "modulename": "inky.ssd1683", "qualname": "WRITE_RAM", "kind": "variable", "doc": "<p></p>\n", "default_value": "36"}, {"fullname": "inky.ssd1683.WRITE_ALTRAM", "modulename": "inky.ssd1683", "qualname": "WRITE_ALTRAM", "kind": "variable", "doc": "<p></p>\n", "default_value": "38"}, {"fullname": "inky.ssd1683.READ_RAM", "modulename": "inky.ssd1683", "qualname": "READ_RAM", "kind": "variable", "doc": "<p></p>\n", "default_value": "37"}, {"fullname": "inky.ssd1683.VCOM_SENSE", "modulename": "inky.ssd1683", "qualname": "VCOM_SENSE", "kind": "variable", "doc": "<p></p>\n", "default_value": "43"}, {"fullname": "inky.ssd1683.VCOM_DURATION", "modulename": "inky.ssd1683", "qualname": "VCOM_DURATION", "kind": "variable", "doc": "<p></p>\n", "default_value": "44"}, {"fullname": "inky.ssd1683.WRITE_VCOM", "modulename": "inky.ssd1683", "qualname": "WRITE_VCOM", "kind": "variable", "doc": "<p></p>\n", "default_value": "44"}, {"fullname": "inky.ssd1683.READ_OTP", "modulename": "inky.ssd1683", "qualname": "READ_OTP", "kind": "variable", "doc": "<p></p>\n", "default_value": "45"}, {"fullname": "inky.ssd1683.WRITE_LUT", "modulename": "inky.ssd1683", "qualname": "WRITE_LUT", "kind": "variable", "doc": "<p></p>\n", "default_value": "50"}, {"fullname": "inky.ssd1683.WRITE_DUMMY", "modulename": "inky.ssd1683", "qualname": "WRITE_DUMMY", "kind": "variable", "doc": "<p></p>\n", "default_value": "58"}, {"fullname": "inky.ssd1683.WRITE_GATELINE", "modulename": "inky.ssd1683", "qualname": "WRITE_GATELINE", "kind": "variable", "doc": "<p></p>\n", "default_value": "59"}, {"fullname": "inky.ssd1683.WRITE_BORDER", "modulename": "inky.ssd1683", "qualname": "WRITE_BORDER", "kind": "variable", "doc": "<p></p>\n", "default_value": "60"}, {"fullname": "inky.ssd1683.SET_RAMXPOS", "modulename": "inky.ssd1683", "qualname": "SET_RAMXPOS", "kind": "variable", "doc": "<p></p>\n", "default_value": "68"}, {"fullname": "inky.ssd1683.SET_RAMYPOS", "modulename": "inky.ssd1683", "qualname": "SET_RAMYPOS", "kind": "variable", "doc": "<p></p>\n", "default_value": "69"}, {"fullname": "inky.ssd1683.SET_RAMXCOUNT", "modulename": "inky.ssd1683", "qualname": "SET_RAMXCOUNT", "kind": "variable", "doc": "<p></p>\n", "default_value": "78"}, {"fullname": "inky.ssd1683.SET_RAMYCOUNT", "modulename": "inky.ssd1683", "qualname": "SET_RAMYCOUNT", "kind": "variable", "doc": "<p></p>\n", "default_value": "79"}, {"fullname": "inky.ssd1683.NOP", "modulename": "inky.ssd1683", "qualname": "NOP", "kind": "variable", "doc": "<p></p>\n", "default_value": "255"}, {"fullname": "inky.what", "modulename": "inky.what", "kind": "module", "doc": "<p><code>Inky wHAT</code>_ class and methods.</p>\n\n<p>A getting started <code>tutorial</code>_ for the Inky wHAT is available on the pimoroni website.</p>\n"}, {"fullname": "inky.what.InkyWHAT", "modulename": "inky.what", "qualname": "InkyWHAT", "kind": "class", "doc": "<p>Inky wHAT e-Ink Display Driver.</p>\n\n<p>:Example: ::</p>\n\n<pre><code>&gt;&gt;&gt; from inky import InkyWHAT\n&gt;&gt;&gt; display = InkyWHAT('red')\n&gt;&gt;&gt; display.set_border(display.BLACK)\n&gt;&gt;&gt; for x in range(display.WIDTH):\n&gt;&gt;&gt;     for y in range(display.HEIGHT):\n&gt;&gt;&gt;         display.set_pixel(x, y, display.RED)\n&gt;&gt;&gt; display.show()\n</code></pre>\n", "bases": "inky.inky.Inky"}, {"fullname": "inky.what.InkyWHAT.__init__", "modulename": "inky.what", "qualname": "InkyWHAT.__init__", "kind": "function", "doc": "<p>Initialise an Inky wHAT Display.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>str colour: one of 'red', 'black' or 'yellow', default</strong>:  'black'.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">colour</span><span class=\"o\">=</span><span class=\"s1\">&#39;black&#39;</span></span>)</span>"}, {"fullname": "inky.what.InkyWHAT.WIDTH", "modulename": "inky.what", "qualname": "InkyWHAT.WIDTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "400"}, {"fullname": "inky.what.InkyWHAT.HEIGHT", "modulename": "inky.what", "qualname": "InkyWHAT.HEIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "300"}, {"fullname": "inky.what.InkyWHAT.WHITE", "modulename": "inky.what", "qualname": "InkyWHAT.WHITE", "kind": "variable", "doc": "<p></p>\n", "default_value": "0"}, {"fullname": "inky.what.InkyWHAT.BLACK", "modulename": "inky.what", "qualname": "InkyWHAT.BLACK", "kind": "variable", "doc": "<p></p>\n", "default_value": "1"}, {"fullname": "inky.what.InkyWHAT.RED", "modulename": "inky.what", "qualname": "InkyWHAT.RED", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}, {"fullname": "inky.what.InkyWHAT.YELLOW", "modulename": "inky.what", "qualname": "InkyWHAT.YELLOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "2"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();